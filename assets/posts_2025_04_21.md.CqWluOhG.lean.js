import{_ as r,c,o as n,j as e,a}from"./chunks/framework.CbZ0TyXs.js";const m=JSON.parse('{"title":"Clean Architecture 関数型プログラミング","description":"Clean Architecture 関数型プログラミング","frontmatter":{"date":"2025-04-21T00:00:00.000Z","title":"Clean Architecture 関数型プログラミング","description":"Clean Architecture 関数型プログラミング","tags":["Clean Architecture"],"prev":{"text":"Clean Architecture オブジェクト指向プログラミング","link":"/posts/2025/04/20"},"next":{"text":"Clean Architecture 設計の原則","link":"/posts/2025/04/22"}},"headers":[],"relativePath":"posts/2025/04/21.md","filePath":"posts/2025/04/21.md"}'),l={name:"posts/2025/04/21.md"};function s(i,t,o,h,p,d){return n(),c("div",null,[...t[0]||(t[0]=[e("h1",{id:"clean-architecture-関数型プログラミング",tabindex:"-1"},[a("Clean Architecture 関数型プログラミング "),e("a",{class:"header-anchor",href:"#clean-architecture-関数型プログラミング","aria-label":'Permalink to "Clean Architecture 関数型プログラミング"'},"​")],-1),e("p",null," 関数型言語の変数は変化しない。",-1),e("h2",{id:"不変性とアーキテクチャ",tabindex:"-1"},[a("不変性とアーキテクチャ "),e("a",{class:"header-anchor",href:"#不変性とアーキテクチャ","aria-label":'Permalink to "不変性とアーキテクチャ"'},"​")],-1),e("p",null," 競合状態、デットロック状態、並行更新の問題の原因が、全て可変変数にある。変数が変化しなければ、競合状態や並行更新の問題は発生しない。また、変更可能なロックがなければデットロックになることもない。",-1),e("p",null," 並行処理の(複数スレッドやプロセスを必要とする)アプリケーションにおいてー直面するあらゆる問題は、可変変数がなければ発生しない。",-1)])])}const f=r(l,[["render",s]]);export{m as __pageData,f as default};
