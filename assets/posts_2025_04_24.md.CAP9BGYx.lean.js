import{_ as a,C as l,c as g,o as n,j as t,b as i,a7 as c,a as e,w as o,G as p,a8 as d}from"./chunks/framework.CbZ0TyXs.js";const _=JSON.parse('{"title":"Clean Architecture オープン・クローズドの原則","description":"Clean Architecture オープン・クローズドの原則","frontmatter":{"date":"2025-04-24T00:00:00.000Z","title":"Clean Architecture オープン・クローズドの原則","description":"Clean Architecture オープン・クローズドの原則","tags":["Clean Architecture"],"prev":{"text":"Clean Architecture 単一責任の原則","link":"/posts/2025/04/23"},"next":{"text":"Clean Architecture リスコフの置換原則","link":"/posts/2025/04/25"}},"headers":[],"relativePath":"posts/2025/04/24.md","filePath":"posts/2025/04/24.md"}'),u={name:"posts/2025/04/24.md"};function C(h,r,m,A,P,I){const s=l("Mermaid");return n(),g("div",null,[r[1]||(r[1]=t("h1",{id:"clean-architecture-オープン・クローズドの原則",tabindex:"-1"},[e("Clean Architecture オープン・クローズドの原則 "),t("a",{class:"header-anchor",href:"#clean-architecture-オープン・クローズドの原則","aria-label":'Permalink to "Clean Architecture オープン・クローズドの原則"'},"​")],-1)),r[2]||(r[2]=t("ul",null,[t("li",null,"ソフトウェアの構成要素は拡張に対しては開いていて、修正に対して閉じていなければならない。")],-1)),r[3]||(r[3]=t("p",null," 言い換えれば、ソフトウェアの振る舞いは、既存の成果物を変更せずに拡張できるようにすべきである、ということ。",-1)),r[4]||(r[4]=t("h2",{id:"コンポーネントの関係は単方向",tabindex:"-1"},[e("コンポーネントの関係は単方向 "),t("a",{class:"header-anchor",href:"#コンポーネントの関係は単方向","aria-label":'Permalink to "コンポーネントの関係は単方向"'},"​")],-1)),(n(),i(d,null,{default:o(()=>[p(s,{id:"mermaid-16",class:"mermaid",graph:"flowchart%20TD%0A%20%20%20%20View%20--%3E%20Presenter%0A%20%20%20%20Presenter%20--%3E%20Controller%0A%20%20%20%20Controller%20--%3E%20Interactor%0A%20%20%20%20Interactor%20--%3E%20Database%0A"})]),fallback:o(()=>[...r[0]||(r[0]=[e(" Loading... ",-1)])]),_:1})),r[5]||(r[5]=c("",11))])}const V=a(u,[["render",C]]);export{_ as __pageData,V as default};
